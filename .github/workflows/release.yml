name: Release Build

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发
  release:
    types: [published, created]  # 监听release事件
  workflow_dispatch:  # 支持手动触发
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write  # 允许创建release和上传文件

jobs:
  build-and-release:
    name: Build and Release
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        python scripts/build.py
        
    - name: Verify build
      run: |
        if [ -f "dist/NetKit.exe" ]; then
          file_size=$(stat -c%s "dist/NetKit.exe" 2>/dev/null || stat -f%z "dist/NetKit.exe" 2>/dev/null || echo "0")
          file_size_mb=$(echo "scale=1; $file_size / 1048576" | bc -l 2>/dev/null || echo "Unknown")
          echo "Build successful! File size: ${file_size_mb} MB"
        else
          echo "Build failed!"
          exit 1
        fi
      shell: bash
      
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 获取标签名称
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $tag = "${{ github.event.inputs.tag }}"
        } else {
          $tag = "${{ github.ref_name }}"
        }
        
        $buildTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        $commitSha = "${{ github.sha }}"
        
        $releaseBody = "## NetKit Release $tag`n`n### 下载`n- **NetKit.exe** - 单文件可执行程序 (约17MB)`n`n### 使用说明`n1. 下载 NetKit.exe 文件`n2. 右键选择`"以管理员身份运行`"`n3. 开始使用网络工具功能`n`n### 系统要求`n- Windows 10/11`n- 管理员权限（推荐）`n`n### 功能特性`n- IP地址快速切换`n- Ping测试工具`n- 子网计算器`n- 路由追踪`n- 静态路由管理`n`n---`n`n**自动构建时间**: $buildTime`n**构建版本**: $commitSha"
        
        # 只有在推送标签或手动触发时才创建Release
        if ("${{ github.event_name }}" -eq "push" -or "${{ github.event_name }}" -eq "workflow_dispatch") {
          gh release create $tag dist/NetKit.exe --title "NetKit $tag" --notes $releaseBody
        } else {
          # 对于release事件，只上传文件到已存在的release
          gh release upload $tag dist/NetKit.exe --clobber
        }
        
        # 上传使用说明文档
        if (Test-Path "docs/使用说明_单文件版本.md") {
          gh release upload $tag "docs/使用说明_单文件版本.md" --clobber
        }
      shell: powershell
