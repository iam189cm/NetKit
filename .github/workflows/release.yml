name: Release Build

on:
  push:
    tags:
      - 'v*'  # Trigger when version tags are pushed
  release:
    types: [published, created]  # Listen to release events
  workflow_dispatch:  # Support manual trigger
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write  # Allow creating releases and uploading files

jobs:
  build-and-release:
    name: Build and Release
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        python scripts/build.py
        
    - name: Rename executable with version
      run: |
        # Get tag name
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $tag = "${{ github.event.inputs.tag }}"
        } else {
          $tag = "${{ github.ref_name }}"
        }
        
        # Rename the executable to include version
        if (Test-Path "dist/NetKit.exe") {
          Rename-Item "dist/NetKit.exe" "NetKit-$tag.exe"
          Write-Host "Renamed to NetKit-$tag.exe" -ForegroundColor Green
        } else {
          Write-Host "NetKit.exe not found!" -ForegroundColor Red
          exit 1
        }
      shell: powershell
        
    - name: Verify build
      run: |
        # Get tag name
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $tag = "${{ github.event.inputs.tag }}"
        } else {
          $tag = "${{ github.ref_name }}"
        }
        
        if (Test-Path "dist/NetKit-$tag.exe") {
          $fileSize = (Get-Item "dist/NetKit-$tag.exe").Length
          $fileSizeMB = [math]::Round($fileSize / 1MB, 1)
          Write-Host "Build successful! File size: $fileSizeMB MB" -ForegroundColor Green
        } else {
          Write-Host "Build failed!" -ForegroundColor Red
          exit 1
        }
      shell: powershell
      
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Get tag name
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $tag = "${{ github.event.inputs.tag }}"
        } else {
          $tag = "${{ github.ref_name }}"
        }
        
        $buildTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        $commitSha = "${{ github.sha }}"
        
        # Get file size
        $fileSize = (Get-Item "dist/NetKit-$tag.exe").Length
        $fileSizeMB = [math]::Round($fileSize / 1MB, 1)
        
        $releaseBody = "## NetKit $tag - Network Engineer Toolkit`n`n### Download`n- **NetKit-$tag.exe** - Windows single file version ($fileSizeMB MB)`n- Compatible with Windows 10/11/Server`n`n### Quick Start`n1. Download NetKit-$tag.exe file`n2. Right-click and select 'Run as administrator'`n3. Start using network management features`n`n### System Requirements`n- Windows 10/11 or Windows Server`n- Administrator privileges (recommended for network configuration)`n`n### Core Features`n- IP address quick switching`n- Ping network testing`n- Static route management`n`n### Target Users`nPractical tool designed for network engineers and system administrators`n`n---`n**Build Time**: $buildTime  `n**Version Hash**: $($commitSha.Substring(0,8))  `n**Tested on**: Windows 2019/2022/Latest platforms"
        
        # Only create Release when pushing tags or manual trigger
        if ("${{ github.event_name }}" -eq "push" -or "${{ github.event_name }}" -eq "workflow_dispatch") {
          gh release create $tag "dist/NetKit-$tag.exe" --title "NetKit $tag" --notes $releaseBody
        } else {
          # For release events, only upload files to existing release
          gh release upload $tag "dist/NetKit-$tag.exe" --clobber
        }
        
        # Upload documentation
        if (Test-Path "docs/README.md") {
          gh release upload $tag "docs/README.md" --clobber
        }
      shell: powershell
